/* visible-grid - v0.0.1 - MIT */
/* Design and develop with a visible grid */
/* https://github.com/stephenhutchings/visible-grid.git */
!function(e,t,i){var n,o,s;return o=e.devicePixelRatio||1,s="visible-grid",n=function(){function n(){var e;this.el=t.createElement("div"),e="grid-"+i.random().toFixed(8).split(".")[1],this.el.setAttribute("id",e),this.el.innerHTML=this.template(e),this.elements={canvas:this.el.querySelector("canvas"),form:this.el.querySelector("form")},this.context=this.elements.canvas.getContext("2d"),t.body.appendChild(this.el,"beforeEnd"),this.load(),this.bindEvents(),this.__resize()}return n.prototype.getIndex=function(){return+this.elements.form.select.value},n.prototype.bindEvents=function(){return this.el.addEventListener("input",this,!1),this.el.addEventListener("click",this,!1),this.el.addEventListener("submit",this,!1),e.addEventListener("keydown",this,!1),e.addEventListener("resize",this,!1)},n.prototype.handleEvent=function(e){var t;switch(e.type){case"click":if(e.target===this.elements.form.remove&&this.remove(),e.target===this.elements.form.add&&this.prompt(),e.target===this.elements.form.constrain)return t=this.getIndex(),this.grids[t].constrain=e.target.checked,this.select(t);break;case"keydown":return this.__keyDown(e);case"input":return this.__input(e),this.draw();case"resize":return this.__resize(e),this.draw();case"submit":return e.preventDefault(),!1}},n.prototype.__keyDown=function(e){var i,n;switch(i=this.getIndex(),e.keyCode){case 37:if(e.target===t.body)return this.grids[i].columns>0&&this.grids[i].columns--,this.select(i);break;case 39:if(e.target===t.body)return this.grids[i].columns++,this.select(i);break;case 85:return this.elements.form.classList.toggle("disable");case 71:if(n=this.elements.canvas.classList.contains("disable"),this.elements.canvas.classList.toggle("disable"),!n)return this.elements.form.classList.add("disable")}},n.prototype.__input=function(e){var t;if(e.target.value){switch(t=this.getIndex(),e.target){case this.elements.form.select:this.select(t);break;case this.elements.form.color:this.grids[t].color=e.target.value;break;default:this.grids[t][e.target.name]=i.max(+e.target.value,0)}return this.save()}},n.prototype.__resize=function(e){var i,n,s,r,l;return l=t.body.offsetWidth,n=t.body.offsetHeight,this.el.style.height=n+"px",this.elements.canvas.width=l*o,this.elements.canvas.height=n*o,s=e?function(){var e,t,i,n;for(i=this.grids,n=[],s=e=0,t=i.length;t>e;s=++e)r=i[s].size,l>r&&n.push(s);return n}.call(this)[0]:function(){var e,t,n,o;for(n=this.grids,o=[],s=e=0,t=n.length;t>e;s=++e)i=n[s].active,i&&o.push(s);return o}.call(this)[0],this.select(s||0)},n.prototype.select=function(e){var t,i,n,o,s,r,l,a,c,h;for(this.elements.form.select.value=e,this.elements.form.constrain.checked=this.grids[e].constrain,a=["columns","size","gutter","baseline","color","grid","divisions","offset"],o=0,r=a.length;r>o;o++)n=a[o],null!=(c=this.elements.form[n])&&(c.value=this.grids[e][n]||0);for(h=this.grids,i=s=0,l=h.length;l>s;i=++s)t=h[i],t.active=e===i;return this.draw()},n.prototype.prompt=function(){var t,i,n;return t=this.grids.length,n="Enter a name for your new grid",i=e.prompt(n,"Grid #"+(t+1)),i?(this.add({name:i,columns:12,size:1200,gutter:20,baseline:18,color:"lightcoral",constrain:!0}),this.select(t)):void 0},n.prototype.add=function(e){var t;return t=this.grids.length,this.elements.form.select.innerHTML+="<option value='"+t+"'>"+e.name+"</option>",this.grids.push(e),this.elements.form.remove.removeAttribute("disabled"),this.save()},n.prototype.remove=function(e){var t,i,n,o,s,r;if(1!==this.grids.length){for(n=function(){var t,o,s,r;for(s=this.grids,r=[],n=t=0,o=s.length;o>t;n=++t)i=s[n],i.name===e&&r.push(n);return r}.call(this)[0]||this.getIndex(),this.elements.form.select.children[n].remove(),this.grids.splice(n,1),r=this.elements.form.select.children,n=o=0,s=r.length;s>o;n=++o)t=r[n],t.value=n;return 1===this.grids.length&&this.elements.form.remove.setAttribute("disabled","disabled"),this.save()}},n.prototype.draw=function(){var e,t,n,s,r,l,a,c,h,p,u,d,m,g,f,b,v,x,y,w,k,T,z,L;if(z=this.elements.canvas,f=z.width,p=z.height,L=this.grids[this.getIndex()],h=L.gutter,r=L.columns,g=L.size,n=L.color,e=L.baseline,d=L.offset,c=L.grid,a=L.divisions,l=L.constrain,null==g&&(g=0),null==h&&(h=0),h*=o,g*=o,e*=o,c*=o,a*=o,1>g&&(g=f-h),b=(f-g)/2,t=(g+h)/r,this.elements.form.column.value=(t/o).toFixed(2),this.context.strokeStyle=n,this.context.lineWidth=1,this.context.globalAlpha=1,this.context.clearRect(0,0,f,p),this.context.beginPath(),r>0)for(u=v=0;r>=0?r>=v:v>=r;u=r>=0?++v:--v)u>0&&(this.context.moveTo(b+u*t-h,0),this.context.lineTo(b+u*t-h,p)),r>u&&(this.context.moveTo(b+u*t,0),this.context.lineTo(b+u*t,p));if(e>0)for(null==d&&(d=0),m=i.floor((p-d)/e),u=x=0;m>=0?m>=x:x>=m;u=m>=0?++x:--x)this.context.moveTo(b,u*e+d),this.context.lineTo(f-b,u*e+d);if(this.context.closePath(),this.context.stroke(),this.context.globalAlpha=.33,this.context.beginPath(),c>0){for(l||(b=0,g=f),m=i.floor(p/c),s=i.floor(g/c),u=y=0;m>=0?m>=y:y>=m;u=m>=0?++y:--y)this.context.moveTo(b,u*c),this.context.lineTo(f-b,u*c);for(u=w=0;s>=0?s>=w:w>=s;u=s>=0?++w:--w)this.context.moveTo(b+u*c,0),this.context.lineTo(b+u*c,p);if(a>0){for(c/=a,m=i.floor(p/c),s=i.floor(g/c),u=k=0;m>=0?m>=k:k>=m;u=m>=0?++k:--k)this.context.moveTo(b,u*c),this.context.lineTo(f-b,u*c);for(u=T=0;s>=0?s>=T:T>=s;u=s>=0?++T:--T)this.context.moveTo(b+u*c,0),this.context.lineTo(b+u*c,p)}}return this.context.closePath(),this.context.stroke()},n.prototype.show=function(){return this.elements.form.classList.remove("disable"),this.elements.canvas.classList.remove("disable")},n.prototype.hide=function(){return this.elements.form.classList.add("disable"),this.elements.canvas.classList.add("disable")},n.prototype.save=function(){return localStorage.setItem(s,JSON.stringify(this.grids))},n.prototype.load=function(){var e,t,i,n,o;for(this.grids=[],t=function(){try{return JSON.parse(localStorage.getItem(s))}catch(e){}}()||this.defaults,o=[],i=0,n=t.length;n>i;i++)e=t[i],o.push(this.add(e));return o},n.prototype.reset=function(){return localStorage.removeItem(s),this.grids=[].concat(this.defaults),this.save()},n}(),e.Grid=n}(window,document,Math),function(){return Grid.prototype.template=function(e){return"<style> #"+e+", #"+e+" canvas, #"+e+" form { position: absolute; top: 0; left: 0; width: 100%; height: 100%; } #"+e+" { z-index: 5000; pointer-events: none; font-size: 11px; line-height: 16px; font-family: sans-serif; } #"+e+" form, #"+e+" label, #"+e+" footer { display: block; background: #333; padding: 0; margin: 0; color: #ccc; } #"+e+" form { width: 160px; height: auto; margin: 10px; position: fixed; pointer-events: all; } #"+e+" label { clear: both; margin-bottom: 0; border-top: 1px solid #444; border-bottom: 1px solid #222; cursor: pointer; font-weight: bold; } #"+e+" label span { display: inline-block; width: 100px; position: relative; z-index: 1; padding: 4px 0 4px 12px; } #"+e+" label em { font-style: normal; font-family: monospace; color: #888; } #"+e+" input, #"+e+" select { color: inherit; } #"+e+" output { cursor: not-allowed; } #"+e+' input[type="number"], #'+e+" output { display: inline-block; background: transparent; margin: 0; border: none; font: inherit; box-sizing: border-box; padding: 4px; font-family: monospace; width: 100%; text-align: right; padding-left: 88px; margin-left: -103px; padding-right: 20px; margin-right: -20px; -webkit-appearance: none; } #"+e+' input[type="checkbox"] { float: right; margin-right: 20px; } #'+e+" select { border: none; background: transparent; margin: 4px; } #"+e+' select[name="select"] { width: 100px; } #'+e+' select[name="color"] { width: 72px; margin-left: -21px; } #'+e+' input[type="button"] { width: 20px; border: none; background: transparent; margin-left: 3px; display: inline-block; border-radius: 3px; padding: 0 4px; height: 20px; margin: 4px 0; text-align: center; } #'+e+" input::-webkit-inner-spin-button, #"+e+" input::-webkit-outer-spin-button { -webkit-appearance: none; margin: 0; } #"+e+" label:hover, #"+e+" input:hover { color: #eee; } #"+e+" input:focus, #"+e+" select:focus { outline: none; color: #fff; background-color: #444; } #"+e+" footer { padding: 4px 12px; } #"+e+" footer strong { color: #fff; } #"+e+' .disable { display: none; } </style> <canvas></canvas> <form> <label> <select name="select"></select> <input title="Add grid" type="button" name="add" value="+" /> <input title="Delete grid" type="button" name="remove" value="â€“" /> </label> <label> <span>Color</span> <select name="color"> <option value="black">Black</option> <option value="white">White</option> <option value="coral">Orange</option> <option value="crimson">Red</option> <option value="chartreuse">Green</option> <option value="deeppink">Pink</option> <option value="aquamarine">Cyan</option> <option value="dodgerblue">Blue</option> <option value="lightcoral">Peach</option> <option value="rebeccapurple">Purple</option> </select> </label> <label title="The number of columns"> <span>Columns</span> <input name="columns" type="number" min="1" max="30" /> </label> <label title="The total width of the grid without outer gutters. Set a value of 0 for full-width containers. "> <span>Container Width</span> <input name="size" type="number" min="0" /> <em>px</em> </label> <label title="The margin between each column"> <span>Gutter</span> <input name="gutter" type="number" min="0" /> <em>px</em> </label> <label title="The ideal line-height on which content should align"> <span>Baseline Grid</span> <input name="baseline" type="number" min="0" /> <em>px</em> </label> <label title="The vertical offset for the baseline grid"> <span>Baseline Offset</span> <input name="offset" type="number" min="0" /> <em>px</em> </label> <label title="Create an additional grid"> <span>Document Grid</span> <input name="grid" type="number" min="0" /> <em>px</em> </label> <label title="Create subdivisions within the document grid"> <span>Grid Divisions</span> <input name="divisions" type="number" min="0" /> <em>px</em> </label> <label title="Constrain the grid to the container width"> <span>Constrain Grid</span> <input name="constrain" type="checkbox" /> </label> <label title="The computed column width"> <span>Column Width</span> <output name="column" type="number"></output> <em>px</em> </label> <footer> Toggle <strong>u</strong>ser interface / <strong>g</strong>rid </footer> <form>'}}(),function(){return Grid.prototype.defaults=[{name:"Bootstrap LG",columns:12,size:1140,gutter:30,baseline:20,active:!0,color:"dodgerblue"},{name:"Bootstrap MD",columns:12,size:940,gutter:30,baseline:20,color:"chartreuse"},{name:"Bootstrap SM",columns:12,size:720,gutter:30,baseline:20,color:"rebeccapurple"},{name:"Bootstrap XS",columns:12,gutter:30,baseline:20,color:"lightcoral"},{name:"960 (12 Columns)",columns:12,size:940,gutter:20,color:"purple"},{name:"960 (16 Columns)",columns:16,size:940,gutter:20,color:"purple"},{name:"Grid (32px)",grid:32,size:1024,divisions:8,constrain:!0,color:"deeppink"},{name:"3-way Split",columns:3,color:"deeppink"}]}();